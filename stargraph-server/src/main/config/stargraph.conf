# Default configuration.
#
#  Virtually anything can be overriden via System properties if needed.
#  -Dstargraph.elastic.cluster-name=MyCluster
#  -Dstargraph.elastic.servers.0=localhost:9301
#
#  This configuration also overrides reference.conf found on the classpath.
#
processors = {
  coref-processor = {
    graphene {
      coreference {
        url = "http://localhost:5128/resolve"
        text-path = "text"
        wiki-path = "wiki"
        wiki-link-path = "link"
      }
    }
  }
}
stargraph = {
  data.root-dir = /home/viktor/stargraph-data
  networking.rest-url = "http://0.0.0.0:8917"

  elastic.servers = ["localhost:9300"]


  distributional-service.rest-url = "http://indra.lambda3.org/relatedness"

  kb.dbpedia-2016 = {
    model.facts.elastic = ${stargraph.elastic}
    model.relations.elastic = ${stargraph.elastic}
    model.entities.elastic = ${stargraph.elastic}
    model.documents.elastic = ${stargraph.elastic}
  }

  kb.obama = {
    model.facts.elastic = ${stargraph.elastic}
    model.relations.elastic = ${stargraph.elastic}
    model.entities.elastic = ${stargraph.elastic}
    model.documents.elastic = ${stargraph.elastic}
  }

  kb.lucene-dbpedia = {
    enabled = yes
    language = EN

    namespaces = {
      dbr: "http://dbpedia.org/resource/"
    }

    triple-store.namespace.mapping = default

    triple-store.hdt.file = "http://data.lambda3.org/dbpedia_en-2016.hdt"
    triple-store.hdt.use-index = yes


    model.entities = {
      provider.class = net.stargraph.core.CanonicalEntityProviderFactory
      # For testing purposes, we use lucene
      index-store.factory.class = net.stargraph.core.impl.lucene.LuceneFactory

      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
      ]


      elastic = ${stargraph.elastic}
    }

    model.documents = {
      provider.class = net.stargraph.core.DocumentProviderFactory

      processors = [
        {
          coref-processor: ${processors.coref-processor}
        },
        {
          passage-processor: {}
        }
      ]

      elastic = ${stargraph.elastic}
    }
  }
}